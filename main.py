# -*- coding: utf-8 -*-
import os
# Form implementation generated from reading ui file 'UITEST.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets
import UITEST
import Serial
import threading
import time
import varity
import subprocess
from queue import Queue
Port = ""
Click = 0
def comBoxSelected():
    global Port
    print(Serial.comports[Ui.comboBox.currentIndex()])
    Port = Serial.comports[Ui.comboBox.currentIndex()]
def ConnectToPC():
    global Click
    while True:
        if Click == 1:
            CMD = "esptool.py --port "+Port+" erase_flash"
            print(time.asctime())
            Ui.lineEdit.setText("Earsing Flash")
            os.system(CMD)
            OutPut = time.asctime()+"   Erasing complete"
            Ui.lineEdit.setText(OutPut)
            Click = 0
def Clicked():
    global Click
    Click = 1

PortList = []
LastPortList = []
def Window():
    global LastPortList
    while True:
        PortList = varity.q.get()
        #print(LastPortList)
        if (PortList == LastPortList) == False:
            Ui.comboBox.clear()
            Ui.comboBox.addItems(PortList)
            print("UpDate")
            LastPortList = PortList

if __name__ == '__main__':
    Serial = Serial.Serial()
    # _QTWindows_#
    app = QtWidgets.QApplication(sys.argv)
    MainWndow = QtWidgets.QMainWindow()
    Ui = UITEST.Ui_Dialog()
    Ui.setupUi(MainWndow)
    MainWndow.show()
    # _QTWindows_#
    Ui.comboBox.currentIndexChanged.connect(comBoxSelected)
    Ui.pushButton_3.clicked.connect(Clicked)
    Ui.lineEdit.setReadOnly(True)

    #_Thread_
    GetSerial = threading.Thread(target=Serial.UpDatePortList)
    WindowProc = threading.Thread(target=Window)
    ClickProc = threading.Thread(target=ConnectToPC)

    GetSerial.start()
    ClickProc.start()
    PortList = varity.q.get()
    WindowProc.start()

    # _Thread_
    sys.exit(app.exec())
